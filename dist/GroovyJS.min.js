Array.prototype.gCollect||(Array.prototype.gCollect=function(a){for(var b=[],c=0;c<this.length;c++)b.push(void 0===a?this[c]:a(this[c],c));return b}),Object.prototype.gCollect||Object.defineProperty(Object.prototype,"gCollect",{value:function(a){if(void 0===a)throw new Error("Callback function is required !");var b=[];for(var c in this)this.hasOwnProperty(c)&&b.push(a(c,this[c]));return b}}),Array.prototype.gCollectEntries||(Array.prototype.gCollectEntries=function(a){if(void 0===a)throw new Error("Callback function is required !");for(var b={},c=0;c<this.length;c++){var d=a(this[c],c);if(!(d instanceof Array)||2!=d.length)throw new Error("Callback function should return an array of two items !");b[d[0]]=d[1]}return b}),Object.prototype.gCollectEntries||Object.defineProperty(Object.prototype,"gCollectEntries",{value:function(a){var b={};for(var c in this)if(this.hasOwnProperty(c))if(void 0===a)b[c]=this[c];else{var d=a(c,this[c]);if(!(d instanceof Array)||2!=d.length)throw new Error("Callback function should return an array of two items !");b[d[0]]=d[1]}return b}}),Array.prototype.gEach||(Array.prototype.gEach=function(a){if(void 0===a)throw new Error("Callback function is required !");for(var b=0;b<this.length;b++)a(this[b],b)}),Object.prototype.gEach||Object.defineProperty(Object.prototype,"gEach",{value:function(a){if(void 0===a)throw new Error("Callback function is required !");for(var b in this)this.hasOwnProperty(b)&&a(b,this[b])}}),Array.prototype.gFind||(Array.prototype.gFind=function(a){for(var b=0;b<this.length;b++){var c=this[b];if(void 0===a||a(c,b))return c}return null}),Array.prototype.gFindAll||(Array.prototype.gFindAll=function(a){for(var b=[],c=0;c<this.length;c++){var d=this[c];(void 0===a||a(d,c))&&b.push(d)}return b}),Object.prototype.gFindAll||Object.defineProperty(Object.prototype,"gFindAll",{value:function(a){var b={};for(var c in this)this.hasOwnProperty(c)&&(void 0===a||a(c,this[c]))&&(b[c]=this[c]);return b}}),Array.prototype.gFirst||(Array.prototype.gFirst=function(){return 0===this.length?null:this[0]}),Array.prototype.gGroupBy||(Array.prototype.gGroupBy=function(a){if(void 0===a)throw new Error("Callback function is required !");for(var b={},c=0;c<this.length;c++){var d=a(this[c],c);void 0===b[d]&&(b[d]=[]),b[d].push(this[c])}return b}),Object.prototype.gGroupBy||Object.defineProperty(Object.prototype,"gGroupBy",{value:function(a){if(void 0===a)throw new Error("Callback function is required !");var b={};for(var c in this)if(this.hasOwnProperty(c)){var d=a(c,this[c]);void 0===b[d]&&(b[d]={}),b[d][c]=this[c]}return b}}),Array.prototype.gJoin||(Array.prototype.gJoin=function(a){for(var b="",c=0;c<this.length;c++)b+=this[c],void 0!==a&&c<this.length-1&&(b+=a);return b}),Array.prototype.gLast||(Array.prototype.gLast=function(){return 0===this.length?null:this[this.length-1]});